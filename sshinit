#!/bin/sh

# This software is covered under the GNU AGPLv3 
# https://www.gnu.org/licenses/agpl-3.0.en.html
# Contact the author at mudbungie@gmail.com
# Copyright 2016 mudbungie

# Program to initialize an SSH configuration with a host. Makes a new SSH key, 
# copies that to the host, appends the use of that key to the local 
# ~/.ssh/config. If the -r option is invoked, it will also su into the host's
# root user, and copy the ssh key there.

# Usage: 
#   ssh-init [-r] user@host


# Parse arguments.
usage='ssh-init [-r] user@host'
root=0
while getopts r arg; do
    root=1
    shift 1
done

target=$1
username=$(echo $target |cut -d \@ -f 1)
hostname=$(echo $target |cut -d \@ -f 2)
keypath=$HOME/.ssh/auto/$target
pubpath=$keypath.pub
config=$HOME/.ssh/config

# Makes a keypair with no password, and an unidentifying comment.
makeKey () {
    mkdir -p $HOME/.ssh/auto
    chmod 700 $HOME/.ssh/auto
    ssh-keygen -t ed25519 -f $HOME/.ssh/auto/$target -C $target -N ""
    echo "Keypair created in $HOME/.ssh/auto"
}
# Adds configuration in ~/.ssh/config which will invoke the keypair and 
# user. 
appendConfig () {
    cat $config |while read line; do
        case $line in
            ^\s*Host)
                echo $line
    echo "" >> $config
    echo "Host $hostname" >> $config

    if [ $root -eq 1 ]; then
        echo "    user root" >> $config
    else
        echo "    user $username" >> $config
    fi
    echo "    IdentityFile $keypath" >> $config
    echo "Configuration added to $config"
}
insertId () {
    ssh-copy-id -i $pubpath $target
    appendConfig
    if [ $root -eq 1 ]; then
        ssh -t $target "su -c \"mkdir -p /root/.ssh; tail -n 1 \$HOME/.ssh/authorized_keys >> /root/.ssh/authorized_keys\""
    fi
    echo "Key installed on remote machine."
}

echo $target

appendConfig
makeKey
insertId
